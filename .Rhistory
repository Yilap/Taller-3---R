colnames(ResultadoInt) <- c("L(d)", "pValue adf", "Estado")
rownames(ResultadoInt) <- colnames(dtdata)[1:14]
for(it in 1:length(dtdata)){
ResultadoInt[it,1] <- ndiffs(ts(dtdata[,it]), test = "adf", alpha = 0.05)
adf <- adf.test(ts(dtdata[,it]))
ResultadoInt[it,2] <- round(adf$p.value,3)
ResultadoInt[it,3] <- ifelse(round(adf$p.value,3)<=0.05, "Estacionaria", "No Est")
}
View(ResultadoInt)
adf.test(diff(diff(diff(ts(dtdata[,5])))))
ndiffs(ts(dtdata[,5]))
plot(ts(dtdata[,5]))
plot(diff(diff(ts(dtdata[,5]))))
#############################################################################
#############################################################################
#############################################################################
#############################################################################
####################### RM PARA TODO ########################################
rm(list = ls())
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
dtdata <- datos[1:nrow(datos),2:15]
rm(datos, path)
ResultadoInt <- matrix(0, ncol = 3, nrow = 14 )
ResultadoInt <- as.data.frame(ResultadoInt)
colnames(ResultadoInt) <- c("L(d)", "pValue adf", "Estado")
rownames(ResultadoInt) <- colnames(dtdata)[1:14]
View(ResultadoInt)
View(dtdata)
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
View(datos)
dtdata <- datos[1:nrow(datos),2:15]
rm(datos, path)
ResultadoInt <- matrix(0, ncol = 3, nrow = 14 )
ResultadoInt <- as.data.frame(ResultadoInt)
colnames(ResultadoInt) <- c("L(d)", "pValue adf", "Estado")
rownames(ResultadoInt) <- colnames(dtdata)[1:14]
for(it in 1:length(dtdata)){
ResultadoInt[it,1] <- ndiffs(ts(dtdata[,it]), test = "adf", alpha = 0.05)
adf <- adf.test(ts(dtdata[,it]))
ResultadoInt[it,2] <- round(adf$p.value,3)
ResultadoInt[it,3] <- ifelse(round(adf$p.value,3)<=0.05, "Estacionaria", "No Est")
}
train <- dtdata[1:(nrow(dtdata)-12),]
test <- dtdata[(nrow(dtdata)-11):nrow(dtdata),]
View(test)
datavar <- train[,c(2,3)]
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
summary(modelo1)$roots
serial.test(modelo1, lags.pt=12, type="PT.asymptotic")
normality.test(modelo1, multivariate.only=FALSE)
arch.test(modelo1, lags.multi = 12, multivariate.only = FALSE)
GrangerIncome <-causality(modelo1, cause = 'Brent')
GrangerIncome
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
fanchart(forecastvar)
plot(modelo1)
Y <- test[,1]
rmse <- (sum((Y-pronosticopunto)^2))^0.5
rmse
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
fanchart(forecastvar)
plot(modelo1)
Y <- test[,1]
rmse <- (sum((Y-pronosticopunto)^2))^0.5
pronosticopunto
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
pronosticopunto
Y <- test[,1]
Y
Y-pronosticopunto
rmse <- (mean((Y-pronosticopunto)^2))^0.5
Y-pronosticopunto
(Y-pronosticopunto)^2
mean((Y-pronosticopunto)^2)
pronosticopunto <- as.numeric(forecastvar$fcst$DiffBrent[,1])
Y <- as.numeric(test[,1])
test[,1]
Y <- as.numeric(ts(test[,1]))
rmse <- (mean((Y-pronosticopunto)^2))^0.5
rmse
rmsefun <- function(train, test){
datavar <- train
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
return(rmse)
}
maefun <- function(train, test){
datavar <- train
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
mae <- round(sum(abs(Y-pronosticopunto))/nrow(Y),4)
return(mae)
}
mapefun <- function(train, test){
datavar <- train
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
mape <- round((sum(abs((Y-pronosticopunto)/Y)))*100/nrow(Y),4)
return(mape)
}
### Prueba de la función
testt <- test[,c(1,3)]
traint <- train[,c(1,3)]
rmsefun(traint, testt)
maefun(traint, testt)
mapefun(traint, testt)
vector <- c(3,4,5,6,7,8,9,10,11,12,13,14)
resultadosmse1 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse1 <- as.data.frame(resultadosmse1)
colnames(resultadosmse1) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse1[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse1)
resultadosmse1 # BrasilTon
vector <- c(3,4,5,6,7,8,10,11,12,13,14)
resultadosmse2 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse2 <- as.data.frame(resultadosmse2)
colnames(resultadosmse2) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse2[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse2)
resultadosmse2 # CanadaHeavy
vector <- c(3,4,5,6,7,8,10,12,13,14)
resultadosmse3 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse3 <- as.data.frame(resultadosmse3)
colnames(resultadosmse3) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,11,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse3[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse3)
resultadosmse3 # ISE
vector <- c(3,5,6,7,8,10,12,13,14)
resultadosmse4 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse4 <- as.data.frame(resultadosmse4)
colnames(resultadosmse4) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,11,4,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse4[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse4)
resultadosmse4 # CanadaTotal - EcuadorTon
View(train)
a <- c(2,9,11,4,8)
traint <- train[,a]
View(traint)
VARselect(traint, lag.max = 12)
VAR(traint)
VAR(traint, p=5)
modelofinal <- VAR(traint, p=5)
summary(modelofinal)
forecastvar <-predict(modelofinal, n.ahead = 12, ci=0.95)
fanchart(forecastvar)
fanchart(forecastvar$fcst$DiffBrent)
plot(modelo1)
forecastvar <-predict(modelofinal, n.ahead = 12, ci=0.95)
fanchart(forecastvar)
plot(modelofinal)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
rmse <- (mean((Y-pronosticopunto)^2))^0.5
rmse
Y <- ts(test[,1])
rmse <- (mean((Y-pronosticopunto)^2))^0.5
rmse
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- as.numeric(ts(test[,1]))
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
pronosticopunto
Y <- as.numeric(ts(test[,1]))
Y
Y-pronosticopunto
(
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
rmse <- Y-pronosticopunto
rmse <- (Y-pronosticopunto)^2
rmse <- mean((Y-pronosticopunto)^2)
rmse <- sqrt(mean((Y-pronosticopunto)^2))
View(traint)
Varq <- function(train, test){
datavar <- train
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
return(VARs)
}
vector <- c(3,4,5,6,7,8,9,10,11,12,13,14)
resultadosmse1 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse1 <- as.data.frame(resultadosmse1)
colnames(resultadosmse1) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse1[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse1)
resultadosmse1 # BrasilTon
vector <- c(3,4,5,6,7,8,10,11,12,13,14)
resultadosmse2 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse2 <- as.data.frame(resultadosmse2)
colnames(resultadosmse2) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse2[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse2)
resultadosmse2 # CanadaHeavy
vector <- c(3,4,5,6,7,8,10,12,13,14)
resultadosmse3 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse3 <- as.data.frame(resultadosmse3)
colnames(resultadosmse3) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,11,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse3[,j] <- rmsefun(traint, testt)
j <- j+1
}
min(resultadosmse3)
resultadosmse3 # ISE
vector <- c(3,5,6,7,8,10,12,13,14)
resultadosmse4 <- matrix(0, ncol=length(vector), nrow= 1)
resultadosmse4 <- as.data.frame(resultadosmse4)
colnames(resultadosmse4) <- colnames(dtdata[,vector])
vector <- c(3,5,6,7,8,10,12,13,14)
resultadosmse4 <- matrix(0, ncol=length(vector), nrow= 2)
resultadosmse4 <- as.data.frame(resultadosmse4)
colnames(resultadosmse4) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,11,4,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse4[1,j] <- rmsefun(traint, testt)
resultadosmse4[2,j] <- Varq(traint, testt)
j <- j+1
}
Varq(traint, testt)
Varq <- function(train, test){
datavar <- train
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
return(Varsn)
}
vector <- c(3,5,6,7,8,10,12,13,14)
resultadosmse4 <- matrix(0, ncol=length(vector), nrow= 2)
resultadosmse4 <- as.data.frame(resultadosmse4)
colnames(resultadosmse4) <- colnames(dtdata[,vector])
j <- 1
for(i in vector){
a <- c(2,9,11,4,i)
traint <- train[,a]
testt <- test[,a]
resultadosmse4[1,j] <- rmsefun(traint, testt)
resultadosmse4[2,j] <- Varq(traint, testt)
j <- j+1
}
View(resultadosmse4)
a <- c(2,9,11,4,8)
traint <- train[,a]
View(traint)
datavar <- traint
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,1]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
View(train)
test
a <- c(2,9,11,4,8)
traint <- train[,a]
datavar <- traint
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,2]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
traint
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
View(datos)
summary(modelo1)
traint2 <- datos[,c(3,10,12,5,9)]
View(traint2)
VARs <- VARselect(datavar)
View(modelo1)
predictions <- predict(modelo1, newdata = traint2)
View(predictions)
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
data <- predictions$fcst
View(data)
data <- as.data.frame(data)
View(data)
traint2 <- datos[,c(3,10,12,5,9)]
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
data <- predictions$fcst
View(data)
data <- as.data.frame(predictions$fcst)
write(data)
View(data)
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
dtdata <- datos[1:nrow(datos),2:15]
rm(datos, path)
a <- c(2,9,11,4,8)
traint <- train[,a]
datavar <- traint
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
summary(modelo1)
forecastvar <-predict(modelo1, n.ahead = 12, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,2]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
traint2 <- datos[,c(3,10,12,5,9)]
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
data <- as.data.frame(predictions$fcst)
View(data)
View(predictions)
View(dtdata)
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
dtdata <- datos[1:nrow(datos),2:15]
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
path <- "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/Data VAR Subset Selection.xlsx"
datos <- read_xlsx(path, col_names = TRUE, sheet = "NormalDif")
View(datos)
traint2 <- datos[216:227,c(3,10,12,5,9)]
View(traint2)
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
data <- as.data.frame(predictions$fcst)
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
View(traint2)
summary(modelo1)
modelo1$varresult$DiffBrent$coefficients
coef <- modelo1$varresult$DiffBrent$coefficients
coef <- as.data.frame(modelo1$varresult$DiffBrent$coefficients)
View(coef)
write_xlsx(coef, file = "C:\Users\Yilmer Palacios\OneDrive - Parex Resources Inc\000 Tesis Meca\00- Códigos de Programación Oficial Tesis\11- BestSubsetSelection")
write_xlsx(coef, file = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection")
write_xlsx(coef, file = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection")
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection")
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection")
?write_xlsx()
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef.xlsx")
modelo1$varresult
coef1 <- as.data.frame(modelo1$varresult$BrasilTon$coefficients)
coef2 <- as.data.frame(modelo1$varresult$CanadaHeavyBLS$coefficients)
coef3 <- as.data.frame(modelo1$varresult$ISE$coefficients)
coef4 <- as.data.frame(modelo1$varresult$EcuadorTon$coefficients)
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef1.xlsx")
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef2.xlsx")
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef3.xlsx")
write_xlsx(coef, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef4.xlsx")
write_xlsx(coef1, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef1.xlsx")
write_xlsx(coef2, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef2.xlsx")
write_xlsx(coef3, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef3.xlsx")
write_xlsx(coef4, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/coef4.xlsx")
View(coef4)
View(data)
traint2 <- datos[216:227,c(3,10,12,5,9)]
predictions <- predict(modelo1, newdata = traint2, n.ahead = 12)
plot(predictions)
predictions <- predict(modelo1, newdata = traint2)
plot(predictions)
traint2 <- datos[216:227,c(3,10,12,5,9)]
predictions <- predict(modelo1, newdata = traint2)
plot(predictions)
View(predictions)
a <- c(2,9,11,4,8)
traint <- train[,a]
datavar <- traint
VARs <- VARselect(datavar)
Varsn <- as.numeric(VARs$selection[1])
modelo1 <- VAR(datavar, p = Varsn)
summary(modelo1)
forecastvar <-predict(modelo1, n.ahead = 24, ci=0.95)
pronosticopunto <- forecastvar$fcst$DiffBrent[,1]
Y <- test[,2]
rmse <- round(((sum((Y-pronosticopunto)^2))/nrow(Y))^0.5,4)
rmse
forecastvar <-predict(modelo1, n.ahead = 24, ci=0.95)
forecastvar$fcst$DiffBrent
as.data.frame(forecastvar$fcst$DiffBrent)
predVar <- as.data.frame(forecastvar$fcst$DiffBrent)
View(predVar)
write_xlsx(predVar, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/prevar.xlsx")
traint2 <- datos[216:227,c(3,10,12,5,9)]
predictions <- predict(modelo1, newdata = traint2)
plot(predictions)
data <- as.data.frame(predictions$fcst)
predictions <- predict(modelo1, newdata = traint2)
plot(predictions)
data <- as.data.frame(predictions$fcst)
write_xlsx(data, path = "C:/Users/Yilmer Palacios/OneDrive - Parex Resources Inc/000 Tesis Meca/00- Códigos de Programación Oficial Tesis/11- BestSubsetSelection/prevar2.xlsx")
traint2
Quandl.api_key(jk66MBCuhbqy6ExyssWQ)
Quandl.datatable('QDL/JODI',date='2024-02-29', energy='OIL')
install.packages("devtools")
library(devtools)
install_github("quandl/quandl-r")
install.packages("Quandl")
library(Quandl)
Quandl.api_key("jk66MBCuhbqy6ExyssWQ")
data <- Quandl("QDL/JODI")
View(data)
dataQ <- Quandl.datatable('QDL/JODI',date='2024-02-29', energy='OIL')
View(dataQ)
dataQ <- Quandl.datatable('QDL/JODI',date='2024-02-29', energy='OIL', code = 'RSSCKB')
View(dataQ)
dataQ <- Quandl.datatable('QDL/JODI',country='USA', energy='OIL', code = 'RSSCKB')
View(dataQ)
dataQ <- Quandl.datatable('QDL/JODI',country='USA', energy='OIL', code = 'RSIMKB')
View(dataQ)
dataQ <- Quandl.datatable('QDL/JODI',country='USA', energy='OIL', code = 'RSDEKB')
View(dataQ)
Datachina <- Quandl.datatable('QDL/ODA', indicator = 'CHN_NGDPD')
View(Datachina)
knitr::opts_chunk$set(echo = TRUE)
options(encoding = "utf-8")
rm(list = ls())
##Instalación de paquetes
install.packages("rvest")
install.packages("purrr")
install.packages("tidyverse")
install.packages("tokenizers")
install.packages("syuzhet")
install.packages("wordcloud")
install.packages("tm")
install.packages("cowplot")
install.packages("ggwordcloud")
install.packages("modelsummary")
install.packages("estimatr")
install.packages("sandwich")
#Cargue de paquetes
library(tm)
library(wordcloud)
library(syuzhet)
library(tidyverse)
